<?php
// create-purchase-order.php

// Enable error reporting for debugging
error_reporting(E_ALL);
ini_set('display_errors', 1);

// --- Database Connection ---
$db_host = 'localhost';
$db_user = 'root';
$db_pass = '';
$db_name = 'inventory_system';

$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
// --- Connection Established ---


// --- DATA FETCHING for the form ---
// Fetch suppliers for the dropdown
$suppliers_result = mysqli_query($conn, "SELECT id, name FROM suppliers ORDER BY name ASC");

// Fetch all products to order from
$products_result = mysqli_query($conn, "SELECT id, name FROM products ORDER BY name ASC");
$products = [];
while ($row = mysqli_fetch_assoc($products_result)) {
    $products[] = $row;
}

// --- FORM SUBMISSION HANDLING ---
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    
    // Sanitize main PO data
    $supplier_id = (int)$_POST['supplier_id'];
    $po_number = mysqli_real_escape_string($conn, trim($_POST['po_number']));
    $date_ordered = mysqli_real_escape_string($conn, trim($_POST['date_ordered']));
    $date_expected = mysqli_real_escape_string($conn, trim($_POST['date_expected']));
    $notes = mysqli_real_escape_string($conn, trim($_POST['notes']));

    // Array data from product lines
    $product_ids = $_POST['product_id'];
    $quantities = $_POST['quantity'];
    $cost_prices = $_POST['cost_price'];

    // ** Start a transaction for data integrity **
    mysqli_begin_transaction($conn);

    try {
        // Step 1: Insert the main purchase order record
        $sql_po = "INSERT INTO purchase_orders (supplier_id, po_number, date_ordered, date_expected, notes)
                   VALUES ('$supplier_id', '$po_number', '$date_ordered', '$date_expected', '$notes')";
        
        if (!mysqli_query($conn, $sql_po)) {
            throw new Exception("Error creating purchase order: " . mysqli_error($conn));
        }

        $purchase_order_id = mysqli_insert_id($conn);

        // Step 2: Loop through and insert each PO item
        $sql_item = "INSERT INTO purchase_order_items (purchase_order_id, product_id, quantity, cost_price) VALUES (?, ?, ?, ?)";
        $stmt_item = mysqli_prepare($conn, $sql_item);

        for ($i = 0; $i < count($product_ids); $i++) {
            $product_id = (int)$product_ids[$i];
            $quantity = (int)$quantities[$i];
            $cost_price = (float)$cost_prices[$i];

            if ($quantity > 0) {
                 mysqli_stmt_bind_param($stmt_item, "iiid", $purchase_order_id, $product_id, $quantity, $cost_price);
                 if (!mysqli_stmt_execute($stmt_item)) {
                     throw new Exception("Error adding PO item: " . mysqli_stmt_error($stmt_item));
                 }
            }
        }
        mysqli_stmt_close($stmt_item);

        // If all queries were successful, commit the transaction
        mysqli_commit($conn);
        $success_message = "✅ Purchase Order created successfully!";

    } catch (Exception $e) {
        // If any query failed, roll back the entire transaction
        mysqli_rollback($conn);
        $error_message = "❌ Transaction Failed: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Purchase Order</title>
    <style>
        body { font-family: sans-serif; background: #f4f4f4; }
        .container { max-width: 900px; margin: 2rem auto; padding: 2rem; background: #fff; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h2 { border-bottom: 2px solid #696cff; padding-bottom: 10px; color: #333; }
        form { display: flex; flex-direction: column; gap: 20px; }
        .form-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
        .form-group { display: flex; flex-direction: column; }
        label { margin-bottom: 5px; font-weight: bold; color: #555; }
        input[type="text"], input[type="date"], select, textarea {
            padding: 10px; border: 1px solid #ccc; border-radius: 4px; font-size: 1rem;
        }
        table { width: 100%; border-collapse: collapse; margin-top: 10px; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .total-row td { font-weight: bold; }
        .btn, input[type="submit"] {
            cursor: pointer; padding: 10px 20px; border: none; border-radius: 5px; font-size: 1rem; font-weight: bold;
        }
        .btn-primary { background-color: #696cff; color: white; }
        .btn-secondary { background-color: #8592a3; color: white; }
        .btn-danger { background-color: #ff3e1d; color: white; }
        .text-right { text-align: right; }
        .message { padding: 15px; border-radius: 5px; margin-bottom: 20px; }
        .success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
    </style>
</head>
<body>

<div class="container">
    <h2>Create New Purchase Order</h2>

    <?php if(isset($success_message)): ?>
        <div class="message success"><?= $success_message ?></div>
    <?php endif; ?>
    <?php if(isset($error_message)): ?>
        <div class="message error"><?= $error_message ?></div>
    <?php endif; ?>

    <form method="post" id="po-form">
        <div class="form-grid">
            <div class="form-group">
                <label for="supplier_id">Supplier</label>
                <select name="supplier_id" id="supplier_id" required>
                    <option value="">-- Select Supplier --</option>
                    <?php if(isset($suppliers_result) && $suppliers_result) mysqli_data_seek($suppliers_result, 0); ?>
                    <?php while ($row = mysqli_fetch_assoc($suppliers_result)): ?>
                        <option value="<?= $row['id'] ?>"><?= htmlspecialchars($row['name']) ?></option>
                    <?php endwhile; ?>
                </select>
            </div>
             <div class="form-group">
                <label for="po_number">P.O. Number</label>
                <input type="text" name="po_number" id="po_number">
            </div>
            <div class="form-group">
                <label for="date_ordered">Date Ordered</label>
                <input type="date" name="date_ordered" id="date_ordered" value="<?= date('Y-m-d') ?>" required>
            </div>
            <div class="form-group">
                <label for="date_expected">Expected Delivery</label>
                <input type="date" name="date_expected" id="date_expected">
            </div>
        </div>

        <h3>Products to Order</h3>
        <table id="po-items-table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Cost Price (per item)</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                </tbody>
        </table>
        <button type="button" class="btn btn-secondary" onclick="addProductRow()">+ Add Product</button>

        <div class="form-grid">
            <div class="form-group">
                <label for="notes">Notes / Terms</label>
                <textarea name="notes" id="notes" rows="3"></textarea>
            </div>
            <div style="text-align: right;">
                <h3>Total Cost: <span id="grand-total">RM 0.00</span></h3>
            </div>
        </div>

        <div class="text-right">
             <input type="submit" value="Create Purchase Order" class="btn btn-primary">
        </div>
    </form>
</div>

<script>
    // Store products fetched from PHP in a JavaScript array
    const products = <?= json_encode($products) ?>;
    let currency = 'RM';

    function addProductRow() {
        const tbody = document.getElementById('po-items-table').getElementsByTagName('tbody')[0];
        const newRow = tbody.insertRow();

        // Product Cell
        newRow.insertCell().innerHTML = `
            <select name="product_id[]" class="product-select" required>
                <option value="">-- Select Product --</option>
                ${products.map(p => `<option value="${p.id}">${p.name}</option>`).join('')}
            </select>`;
        
        // Quantity Cell
        newRow.insertCell().innerHTML = '<input type="number" name="quantity[]" class="quantity-input" value="1" min="1" required>';

        // Cost Price Cell
        newRow.insertCell().innerHTML = '<input type="number" name="cost_price[]" class="cost-price-input" step="0.01" required>';

        // Total Cell
        newRow.insertCell().className = 'line-total';
        
        // Action Cell
        newRow.insertCell().innerHTML = '<button type="button" class="btn btn-danger" onclick="removeProductRow(this)">X</button>';

        updateTotals();
    }

    function removeProductRow(button) {
        button.closest('tr').remove();
        updateTotals();
    }

    function updateTotals() {
        let grandTotal = 0;
        document.querySelectorAll('#po-items-table tbody tr').forEach(row => {
            const priceInput = row.querySelector('.cost-price-input');
            const quantityInput = row.querySelector('.quantity-input');
            const lineTotalEl = row.querySelector('.line-total');
            
            const price = parseFloat(priceInput.value) || 0;
            const quantity = parseInt(quantityInput.value) || 0;
            const lineTotal = price * quantity;

            lineTotalEl.innerText = `${currency} ${lineTotal.toFixed(2)}`;
            grandTotal += lineTotal;
        });

        document.getElementById('grand-total').innerText = `${currency} ${grandTotal.toFixed(2)}`;
    }

    // Event Delegation for dynamic rows
    document.getElementById('po-items-table').addEventListener('input', function(e) {
        if (e.target.classList.contains('quantity-input') || e.target.classList.contains('cost-price-input')) {
            updateTotals();
        }
    });

    // Add one product row automatically on page load
    window.onload = addProductRow;
</script>

</body>
</html>